<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>com.bibounde.gaemvnrepo</groupId>
	<artifactId>gaemvnrepo</artifactId>
	<version>1.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>gaemvnrepo</name>

	<scm>
		<connection>scm:git:git://github.com/bibounde/gaemvnrepo.git</connection>
		<url>scm:git://github.com/bibounde/gaemvnrepo.git</url>
		<developerConnection>scm:git:git://github.com/bibounde/gaemvnrepo.git</developerConnection>
	</scm>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<dependencies>

		<!-- Google App Engine meta-package -->
		<dependency>
			<groupId>net.kindleit</groupId>
			<artifactId>gae-runtime</artifactId>
			<version>${gae.version}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>${datanucleus.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- J2EE Servlet API. We need it to compile IndexServlet class. You can 
			probably remove it, if you don't explicitly use Servlets -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Make use of JSP tags. Remove, if you don't use JSPs -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.6</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.6.6</version>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo2-api</artifactId>
			<version>2.3-eb</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- Vaadin -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring-aspects.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-aop.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.19</version>
		</dependency>

		<!-- Findbugs -->
		<dependency>
			<groupId>net.sourceforge.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<!-- Only copy rest of resources -->
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- This plug-in "enhances" your domain model objects (i.e. makes them 
				persistent for datanucleus) -->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<!-- Make sure this path contains your persistent classes! -->
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${datanucleus.version}</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>${datanucleus.version}</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
					<dependency>
						<groupId>javax.jdo</groupId>
						<artifactId>jdo2-api</artifactId>
						<version>2.3-ec</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn 
				gae:deploy" to upload to GAE. -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.9.0</version>
				<configuration>
					<serverId>appengine.google.com</serverId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.kindleit</groupId>
						<artifactId>gae-runtime</artifactId>
						<version>${gae.version}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
		</plugins>
	</reporting>

	<properties>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gae.version>1.6.5</gae.version>

		<datanucleus.version>1.1.5</datanucleus.version>

		<!-- Vaadin -->
		<vaadin.version>6.7.1</vaadin.version>
		<gwt.version>2.3.0</gwt.version>
		<gwt.plugin.version>2.2.0</gwt.plugin.version>

		<!-- Spring -->
		<spring-security.version>3.0.5.RELEASE</spring-security.version>
		<spring-aspects.version>3.0.5.RELEASE</spring-aspects.version>
		<spring-aop.version>3.0.5.RELEASE</spring-aop.version>

		<!-- Integration -->
		<gae.application.name>gaemvnrepo</gae.application.name>
		<gae.application.version>1</gae.application.version>
		<gae.application.build />
		<env.mode>PRODUCTION</env.mode>

	</properties>

	<profiles>
		<!-- We can configure our integration server to activate this profile and 
			perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com 
			automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload 
			application to the http://2.latest.<applicationName>.appspot.com (We might 
			want to set the 2nd version as our applications Default version to be accessible 
			at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 
					2 -->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
		<profile>
			<id>jenkins</id>
			<properties>
				<env.mode>DEV</env.mode>
				<gae.application.version>test</gae.application.version>
				<gae.application.name>gaemvnreponightlybuild</gae.application.name>
				<gae.application.build>${BUILD_ID}</gae.application.build>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<env.mode>DEV</env.mode>
				<gae.application.version>test</gae.application.version>
				<gae.application.name>local</gae.application.name>
				<gae.application.build>${user.name}</gae.application.build>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env.mode>PRODUCTION</env.mode>
				<gae.application.version>1</gae.application.version>
				<gae.application.name>gaemvnrepobibounde</gae.application.name>
				<gae.application.build>${user.name}</gae.application.build>
			</properties>
		</profile>
	</profiles>

</project>